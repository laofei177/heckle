/* --------------------------------------------------------------------- */
/*  MODULE             : MEMORY                                          */
/*  Short Description  : prints an estimation of the memory consumption  */
/* --------------------------------------------------------------------- */


#ifndef HECKLEMEM_H
#define HECKLEMEM_H


typedef struct s_Memory Memory;



/*---------------------------------------------------------------------------
  memory_init()
  ---------------------------------------------------------------------------
  AIM : initialize the memory module
 ---------------------------------------------------------------------------*/
Memory *memory_init(void);





/*---------------------------------------------------------------------------
  memory_delete()
  ---------------------------------------------------------------------------
  AIM : deletes the memory object
 ---------------------------------------------------------------------------*/
void memory_delete(Memory* mem);





/*---------------------------------------------------------------------------
  memory_start()
  ---------------------------------------------------------------------------
  AIM : starts the memory tracking
 ---------------------------------------------------------------------------*/
void memory_start(void);




/*---------------------------------------------------------------------------
  memory_stop()
  ---------------------------------------------------------------------------
  AIM : stops the memory tracking
 ---------------------------------------------------------------------------*/
void memory_stop(void);








/*---------------------------------------------------------------------------
  memory_sum()
  ---------------------------------------------------------------------------
  AIM : add operator for memory objects
 ---------------------------------------------------------------------------*/
void memory_sum(const Memory* const mem1, const Memory* const mem2, Memory *res);







/*---------------------------------------------------------------------------
  memory_add()
  ---------------------------------------------------------------------------
  AIM : add X bytes to the memory
 ---------------------------------------------------------------------------*/
void memory_add(Memory *mem, size_t bytes);






/*---------------------------------------------------------------------------
  memory_remove()
  ---------------------------------------------------------------------------
  AIM : remove X bytes from the memory
 ---------------------------------------------------------------------------*/
void memory_remove(Memory *mem, size_t bytes);






/*---------------------------------------------------------------------------
  memory_allocate()
  ---------------------------------------------------------------------------
  AIM : allocate memory
 ---------------------------------------------------------------------------*/
void *memory_allocate(size_t bytes);







/*---------------------------------------------------------------------------
  memory_free()
  ---------------------------------------------------------------------------
  AIM : free memory
 ---------------------------------------------------------------------------*/
void memory_free(void *ptr, size_t bytes);





/*---------------------------------------------------------------------------
  memory_print()
  ---------------------------------------------------------------------------
  AIM : prints the memory consumption
 ---------------------------------------------------------------------------*/
//void memory_print(const Memory* const mem);
void memory_print(Memory* mem);



/*---------------------------------------------------------------------------
  memory_status()
  ---------------------------------------------------------------------------
  AIM : prints the actual memory consumption
 ---------------------------------------------------------------------------*/
void memory_status(void);




/*---------------------------------------------------------------------------
  memory_estimate()
  ---------------------------------------------------------------------------
  AIM : estimates the max memory consumption per process
 ---------------------------------------------------------------------------*/
void memory_estimate(const STI* const si, const STX* const sx);






#endif // HECKLEMEM_H

